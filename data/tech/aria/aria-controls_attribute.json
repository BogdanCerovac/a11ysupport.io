{
  "id": "aria-controls_attribute",
  "title": "aria-controls attribute",
  "type": "attribute",
  "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element. See related aria-owns.",
  "references": [
    {
      "title": "ARIA spec for aria-controls",
      "url": "https://www.w3.org/TR/wai-aria-1.1/#aria-controls"
    }
  ],
  "related_issues": [
    {
      "title": "ARIA: What to do about aria-controls",
      "url": "https://github.com/w3c/aria/issues/995"
    }
  ],
  "assertions": [
    {
      "id": "convey_presence",
      "title": "convey the presence of the aria-controls attribute",
      "strength": {
        "sr": "MUST",
        "vc": "NA"
      },
      "css_target": "*[aria-controls]",
      "examples": [
        "When supported, screen readers will often hint that an element controls another element, and may even announce the keyboard shortcut to jump to the controlled element",
        "Most screen readers either do not support this attribute or the setting to convey the presence is turned off by default. This is because in the vast majority of cases, the controlled element is adjacent to the element with aria-controls, and thus announcing the presence is redundant and add extra verbosity."
      ],
      "operation_modes": [
        "sr/reading",
        "sr/interaction"
      ]
    },
    {
      "id": "allow_jump_to_controlled",
      "title": "allow the user to jump to the controlled element",
      "rationale": "The controlled element might not be close to the element with aria-controls and the user might find it convenient to jump directly to the controlled element.",
      "strength": {
        "sr": "MUST",
        "vc": "NA"
      },
      "css_target": "*[aria-controls]",
      "operation_modes": [
        "sr/reading",
        "sr/interaction"
      ]
    }
  ],
  "date_updated": "2019-01-06"
}
