{
  "title": "aria-invalid test",
  "description": "A various aria-invalid values applied to a text input",
  "html_file": "aria/aria-invalid.html",
  "assertions": [
    {
      "feature_id": "aria/aria-invalid_attribute",
      "feature_assertion_id": "convey_value_false"
    },
    {
      "feature_id": "aria/aria-invalid_attribute",
      "feature_assertion_id": "convey_value_true"
    },
    {
      "feature_id": "aria/aria-invalid_attribute",
      "feature_assertion_id": "convey_value_grammar"
    },
    {
      "feature_id": "aria/aria-invalid_attribute",
      "feature_assertion_id": "convey_value_spelling"
    }
  ],
  "commands": {
    "jaws": {
      "chrome": [
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, edit, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, edit, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 2, edit, invalid entry, invalid, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 2, edit, invalid entry, invalid, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 3, edit, invalid entry, end invalid, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "partial",
              "notes": "Conveyed as invalid, but not a grammar error."
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 3, edit, invalid entry, end invalid, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "partial",
              "notes": "Conveyed as invalid, but not a grammar error."
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 4, edit, invalid entry, misspelled, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 4, edit, invalid entry, misspelled, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "pass",
              "notes": null
            }
          ]
        }
      ],
      "ie": [
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"edit cats, target 1, edit, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, cats, edit, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"edit cats, target 2, cats, edit, invalid entry, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 2, cats, edit, invalid entry, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"edit cats, target 3, cats, edit, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "fail",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 3, cats, edit, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "fail",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, edit, target 4, cats, edit, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "fail",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 4, cats, edit, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "fail",
              "notes": null
            }
          ]
        }
      ],
      "firefox": [
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, cats, target 1, edit, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, cats, target 1, edit, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, edit, target 2, invalid entry, invalid, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 2, edit, invalid entry, invalid, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 3, edit, invalid entry, invalid entry, target 3, edit, invalid entry, end invalid, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 3, edit, invalid entry, end invalid, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, edit, invalid entry, invalid entry, target 4, invalid entry, misspelled, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 4, edit, invalid entry, misspelled, cats, type in text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "pass",
              "notes": null
            }
          ]
        }
      ]
    },
    "narrator": {
      "edge": [
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, edit, cats, cats, scan off\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, edit, cats, cats selected, scan off\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 2, edit, cats, invalid, cats, scan off\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 2, edit, cats, invalid, cats selected\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 3, edit, cats, invalid\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "partial",
              "notes": "grammar error was not explicitly conveyed"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 3, edit, cats, invalid\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "partial",
              "notes": "grammar error was not explicitly conveyed"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 4, edit, cats, invalid\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "partial",
              "notes": "spelling error was not explicitly conveyed"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 4, edit, cats, invalid\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "partial",
              "notes": "spelling error was not explicitly conveyed"
            }
          ]
        }
      ]
    },
    "nvda": {
      "chrome": [
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, edit cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, edit, selected, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target, edit, invalid entry, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 2, edit, invalid entry, selected, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 3, edit, invalid entry, grammar error, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 3, edit, invalid entry, selected cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "partial",
              "notes": "grammar error not explicitly conveyed"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 4, edit, invalid entry, spelling error, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 4, edit, invalid entry, selected, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "partial",
              "notes": "grammar error not explicitly conveyed."
            }
          ]
        }
      ],
      "firefox": [
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"clickable, target 1, has auto complete, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, has auto complete, selected, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"clickable, target 2, edit, invalid entry, has auto complete, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 2, edit, has invalid entry, selected, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"clickable, target 3, edit, invalid entry, has auto complete, has grammar error, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 2, edit, invalid entry, has auto complete, selected, cats \"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "partial",
              "notes": "grammar error not explicitly conveyed"
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"clickable, target 4, edit, invalid entry, has auto complete, spelling error, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 4, edit, invalid entry, has auto complete, selected, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "partial",
              "notes": "spelling error not explicitly conveyed"
            }
          ]
        }
      ]
    },
    "talkback": {
      "and_chr": [
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, edit box, target 1\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, edit box, error: invalid entry, target 2\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, edit box, error: invalid grammar, target 3, error: invalid entry, error: invalid grammar, end of field\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, edit box, error: invalid spelling, target 4, error: invalid spelling, error: invalid grammar, end of field\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "partial",
              "notes": "also conveyed as invalid grammar"
            }
          ]
        }
      ]
    },
    "vo_ios": {
      "ios_saf": [
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, cats, text field\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 2, cats, text field, invalid field\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 3, cats, text field, invalid grammar\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 4, cats, text field, invalid spelling\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "pass",
              "notes": null
            }
          ]
        }
      ]
    },
    "vo_macos": {
      "safari": [
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, contents selected, target 1, edit text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, contents selected, target 1, edit text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, contents selected, target 2, invalid data, edit text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, contents selected, target 2, invalid data, edit text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, contents selected, target 3, invalid grammar, edit text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, contents selected, target 3, invalid grammar, edit text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, contents selected, target 4, invalid spelling, edit text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"cats, contents selected, target 4, invalid spelling, edit text\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "pass",
              "notes": null
            }
          ]
        }
      ]
    },
    "orca": {
      "firefox": [
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, entry, cats\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"false\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 1, entry, cats, selected, focus mode\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_false",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 2, entry, cats, invalid entry\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"true\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 2, entry, cats, selected, invalid entry\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_true",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 3, entry, cats, invalid grammar\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"grammar\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 3, entry, cats, selected, invalid grammar\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_grammar",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 4, entry, cats, invalid spelling\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "pass",
              "notes": null
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "css_target": "*[aria-invalid=\"spelling\"]",
          "before": {
            "mode": "auto",
            "focus_location": "before target",
            "virtual_location": "before target"
          },
          "after": "target",
          "output": "\"target 4, entry, cats, selected, invalid spelling\"",
          "results": [
            {
              "feature_id": "aria/aria-invalid_attribute",
              "feature_assertion_id": "convey_value_spelling",
              "result": "pass",
              "notes": null
            }
          ]
        }
      ]
    }
  },
  "history": [
    {
      "date": "2020-02-14",
      "message": "Create test and add results"
    }
  ],
  "versions": {
    "dragon_win": {
      "browsers": {
        "chrome": {
          "at_version": "15.30",
          "os_version": "1909",
          "browser_version": "80",
          "date": "2020-02-14"
        }
      }
    },
    "jaws": {
      "browsers": {
        "chrome": {
          "at_version": "2020.2001.70",
          "os_version": "1909",
          "browser_version": "80",
          "date": "2020-02-14"
        },
        "ie": {
          "at_version": "2020.2001.70",
          "os_version": "1909",
          "browser_version": "11",
          "date": "2020-02-14"
        },
        "firefox": {
          "at_version": "2020.2001.70",
          "os_version": "1909",
          "browser_version": "72",
          "date": "2020-02-14"
        }
      }
    },
    "narrator": {
      "browsers": {
        "edge": {
          "at_version": "1909",
          "os_version": "1909",
          "browser_version": "44",
          "date": "2020-02-14"
        }
      }
    },
    "nvda": {
      "browsers": {
        "chrome": {
          "at_version": "2019.2.1",
          "os_version": "1909",
          "browser_version": "80",
          "date": "2020-02-14"
        },
        "firefox": {
          "at_version": "2019.2.1",
          "os_version": "1909",
          "browser_version": "72",
          "date": "2020-02-14"
        }
      }
    },
    "talkback": {
      "browsers": {
        "and_chr": {
          "at_version": "8.1",
          "os_version": "10",
          "browser_version": "80",
          "date": "2020-02-14"
        }
      }
    },
    "va_and": {
      "browsers": {
        "and_chr": {
          "at_version": "3.1",
          "os_version": "10",
          "browser_version": "80",
          "date": "2020-02-14"
        }
      }
    },
    "vo_ios": {
      "browsers": {
        "ios_saf": {
          "at_version": "13.3.1",
          "os_version": "13.3.1",
          "browser_version": "13.3.1",
          "date": "2020-02-14"
        }
      }
    },
    "vo_macos": {
      "browsers": {
        "safari": {
          "at_version": "10.15.3",
          "os_version": "10.15.3",
          "browser_version": "13.0.5",
          "date": "2020-02-14"
        }
      }
    },
    "orca": {
      "browsers": {
        "firefox": {
          "at_version": "3.34.0",
          "os_version": "Ubuntu 19.10",
          "browser_version": "72",
          "date": "2020-02-14"
        }
      }
    },
    "vc_ios": {
      "browsers": {
        "ios_saf": {
          "at_version": "13.3.1",
          "os_version": "13.3.1",
          "browser_version": "13.3.1",
          "date": "2020-02-14"
        }
      }
    },
    "vc_macos": {
      "browsers": {
        "safari": {
          "at_version": "10.15.3",
          "os_version": "10.15.3",
          "browser_version": "13.0.5",
          "date": "2020-02-14"
        }
      }
    },
    "wsr": {
      "browsers": {
        "chrome": {
          "at_version": "1909",
          "os_version": "1909",
          "browser_version": "80",
          "date": "2020-02-14"
        }
      }
    }
  }
}
