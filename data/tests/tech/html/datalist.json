{
  "title": "HTML input with datalist test",
  "description": "A sample datalist attached to a text input. Provide feedback on this test and results in [issue #73](https://github.com/accessibilitysupported/a11ysupport.io/issues/73)",
  "html_file": "html/datalist.html",
  "assertions": [
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "convey_name",
      "results": {
        "dragon_win": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "activate_name",
                  "output": "text input was focused",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Edit combo\"",
                  "result": "fail",
                  "notes": "did not announce the name when entering the input and automatically switching to forms mode."
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, edit combo, to set the value use the arrow keys or type the value.\"",
                  "result": "pass"
                }
              ]
            },
            "ie": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"edit, function type, edit, type in text\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Edit, type in text\"",
                  "result": "pass"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank, function type, Edit, has popup\"",
                  "result": "pass",
                  "notes": "announced the name when entering the input and automatically switching to forms mode."
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Edit has popup, type in text\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Combo edit, scan off.\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Combo edit, scan off, suggestions available.\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Combo box, has auto complete, editable.\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Combo box, has auto complete, editable. Blank.\"",
                  "result": "pass"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Edit subMenu, has auto complete. Blank.\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Edit has auto complete. Blank.\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function type, entry\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function type, entry, focus mode\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"edit box, function type, double-tap to enter text\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "va_and": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "activate_name",
                  "output": "input was not focused",
                  "result": "fail",
                  "notes": "said \"tap function type\""
                }
              ]
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, text field, double tap to edit.\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, edit text\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, edit text\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "vc_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "activate_name",
                  "output": "input was focused",
                  "result": "pass",
                  "notes": "said \"tap function type\""
                }
              ]
            }
          }
        },
        "vc_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "activate_name",
                  "output": "input was focused",
                  "result": "pass",
                  "notes": "said \"click function type\""
                }
              ]
            }
          }
        }
      }
    },
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "convey_role",
      "results": {
        "dragon_win": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "activate_role",
                  "output": "text input was focused",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Edit combo\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Edit combo, to set the value use the arrow keys or type the value.\"",
                  "result": "pass"
                }
              ],
              "notes": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo\" or \"has popup\") to convey the presence of the datalist."
            },
            "ie": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"edit\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit, type in text\"",
                  "result": "pass"
                }
              ],
              "notes": "When paired with IE, JAWS does not alter the role to convey the datalist functionality."
            },
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank, Edit, has popup\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Edit has popup, type in text\"",
                  "result": "pass"
                }
              ],
              "notes": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo\" or \"has popup\") to convey the presence of the datalist."
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Combo edit, scan off.\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Combo edit, scan off, suggestions available.\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Combo box, has auto complete, editable.\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Combo box, has auto complete, editable. Blank.\"",
                  "result": "pass"
                }
              ],
              "notes": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo box\" or \"has popup\") to convey the presence of the datalist."
            },
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Edit subMenu, has auto complete. Blank.\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, Edit has auto complete. Blank.\"",
                  "result": "pass"
                }
              ],
              "notes": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo box\" or \"subMenu\") to convey the presence of the datalist."
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function type, entry\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function type, entry, focus mode\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"edit box, function type, double-tap to enter text\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "va_and": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "show_numbers",
                  "output": "role was flagged with a number",
                  "result": "pass",
                  "notes": "said \"show numbers\""
                }
              ]
            }
          }
        },
        "vc_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "show_numbers",
                  "output": "role was flagged with a number",
                  "result": "pass",
                  "notes": "said \"show numbers\""
                }
              ]
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, text field, double tap to edit.\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, edit text\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, edit text\"",
                  "result": "pass"
                }
              ]
            }
          }
        }
      }
    },
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "convey_change_in_value",
      "results": {
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "(the entered character was announced)",
                  "result": "pass"
                },
                {
                  "command": "select_option",
                  "output": "\"Function, type Edit combo\"",
                  "result": "pass"
                }
              ],
              "notes": "Focus was sent back to the input and the input was announced"
            },
            "ie": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "(the entered character was announced)",
                  "result": "pass"
                },
                {
                  "command": "select_option",
                  "output": "\"edit, function\"",
                  "result": "unknown"
                }
              ],
              "notes": "unknown because it was not possible to navigate to a suggestion to activate"
            },
            "firefox": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "(the entered character was announced)",
                  "result": "pass"
                },
                {
                  "command": "select_option",
                  "output": "\"Function, edit, has popup\"",
                  "result": "unknown"
                }
              ],
              "notes": "Unknown because it was not possible to navigate to a suggestion to activate"
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "(the entered character was announced)",
                  "result": "pass"
                },
                {
                  "command": "select_option",
                  "output": "\"Function\"",
                  "result": "pass"
                }
              ],
              "notes": "The value was announced after a suggestion was activated and focus was returned to the text input"
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "(the entered character was announced)",
                  "result": "pass"
                },
                {
                  "command": "select_option",
                  "output": "\"Function type combo box, has auto complete, editable, function\"",
                  "result": "pass"
                }
              ],
              "notes": "Focus was returned to the text input"
            },
            "firefox": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "(the entered character was announced)",
                  "result": "pass"
                },
                {
                  "command": "select_option",
                  "output": "\"function\"",
                  "result": "pass"
                }
              ],
              "notes": "Focus was returned to the text input but only the value was announced"
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "enter_text",
                  "from": "before target",
                  "to": "target",
                  "output": "the character is announced",
                  "result": "pass"
                },
                {
                  "command": "select_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "(the entered character was announced)",
                  "result": "pass"
                },
                {
                  "command": "select_option",
                  "output": "\"function, close features\"",
                  "result": "pass"
                }
              ],
              "notes": "value was announced and focus was returned to the text input."
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "(the entered character was announced)",
                  "result": "pass"
                },
                {
                  "command": "select_option",
                  "output": "\"Function\"",
                  "result": "pass"
                }
              ],
              "notes": "The activated suggestion was announced, and focus was moved to a new suggestion"
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "(the entered character was announced)",
                  "result": "pass"
                },
                {
                  "command": "select_option",
                  "output": "\"Function\"",
                  "result": "pass"
                }
              ],
              "notes": "Focus was returned to the text input"
            }
          }
        }
      }
    },
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "convey_value",
      "results": {
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function, Edit combo\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit combo, function, to set the value use the arrow keys or type the value.\"",
                  "result": "pass"
                }
              ]
            },
            "ie": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"edit, function\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Function, Edit, type in text\"",
                  "result": "pass"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function, edit, has popup\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit has popup, function, type in text\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Combo edit, function, scan off.\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Combo edit, scan off, function selected.\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Combo box, has auto complete, editable.\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Combo box, has auto complete, editable. Blank.\"",
                  "result": "pass"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit subMenu, has auto complete. function.\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit has auto complete. Selected function.\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function type, entry, function\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function type, entry, function selected, focus mode\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function, edit box, function type, double-tap to enter text\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, function text field, double tap to edit.\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function, contents selected, Function type, edit text\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function, contents selected, Function type, edit text\"",
                  "result": "pass"
                }
              ]
            }
          }
        }
      }
    },
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "provide_shortcuts",
      "results": {
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "open_element_list",
                  "output": "Shown in list of form controls with name and \"edit combo\" role",
                  "result": "pass"
                },
                {
                  "command": "next_form_field",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit combo, to set the value use the arrow keys or type the value.\"",
                  "result": "pass"
                }
              ]
            },
            "ie": {
              "output": [
                {
                  "command": "open_element_list",
                  "output": "Shown in list of form controls with name and \"edit\" role",
                  "result": "pass"
                },
                {
                  "command": "next_form_field",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit, type in text\"",
                  "result": "pass"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "open_element_list",
                  "output": "Shown in list of elements with name and \"edit\" role",
                  "result": "pass"
                },
                {
                  "command": "next_form_field",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit has popup, type in text\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "next_form_field",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Combo edit, press space to edit\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "open_element_list",
                  "output": "Shown in list of form controls with name and \"combobox; edit has auto complete editable\"",
                  "result": "pass"
                },
                {
                  "command": "next_form_field",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Combo box, has auto complete, editable.\"",
                  "result": "pass"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "open_element_list",
                  "output": "\"Function type Edit; subMenu has auto complete.\"",
                  "result": "pass"
                },
                {
                  "command": "next_form_field",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit subMenu, has auto complete. Blank.\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "next_edit_field",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function type, entry\"",
                  "result": "pass"
                },
                {
                  "command": "list_edit_fields",
                  "from": "before target",
                  "to": "target",
                  "output": "in list of text fields",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "next_form_field",
                  "output": "\"edit box, function type, double-tap to enter text\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "next_item_of_type",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, text field, double tap to edit.\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "open_element_list",
                  "output": "Shown in list of form controls with name and \"edit text\" role",
                  "result": "pass"
                },
                {
                  "command": "next_form_field",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, edit text\"",
                  "result": "pass"
                }
              ]
            }
          }
        }
      }
    },
    {
      "feature_id": "html/list_attribute",
      "feature_assertion_id": "convey_presence",
      "results": {
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Edit combo\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit combo, to set the value use the arrow keys or type the value.\"",
                  "result": "pass"
                }
              ],
              "notes": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo\" or \"has popup\") to convey the presence of the datalist."
            },
            "ie": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"edit\"",
                  "result": "fail"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit, type in text\"",
                  "result": "fail"
                }
              ],
              "notes": "When paired with IE, JAWS does not alter the role to convey the datalist functionality."
            },
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank, Edit, has popup\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit has popup, type in text\"",
                  "result": "pass"
                }
              ],
              "notes": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo\" or \"has popup\") to convey the presence of the datalist."
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Combo edit, scan off.\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Combo edit, scan off, suggestions available.\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Combo box, has auto complete, editable.\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Combo box, has auto complete, editable. Blank.\"",
                  "result": "pass"
                }
              ],
              "notes": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo box\" or \"subMenu\") to convey the presence of the datalist."
            },
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit subMenu, has auto complete. Blank.\"",
                  "result": "pass"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type Edit has auto complete. Blank.\"",
                  "result": "pass"
                }
              ],
              "notes": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo box\" or \"subMenu\") to convey the presence of the datalist."
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function type, entry\"",
                  "result": "fail"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "function type, entry, focus mode",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "(after entering text) \"showing autofill popup\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, text field, double tap to edit.\"",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, edit text\"",
                  "result": "fail"
                },
                {
                  "command": "next_focusable_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function type, edit text\"",
                  "result": "fail"
                }
              ]
            }
          }
        }
      }
    },
    {
      "feature_id": "html/datalist_element",
      "feature_assertion_id": "convey_role",
      "results": {
        "dragon_win": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "show_dropdown_choices",
                  "output": "suggestions were displayed",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Menu, Function, To move through items press up or down arrow\"",
                  "result": "partial"
                }
              ],
              "notes": "The datalist is conveyed as a menu as opposed to a listbox."
            },
            "ie": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
                  "result": "fail"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function, 1 of 6, selected\"",
                  "result": "pass"
                }
              ],
              "notes": "The datalist role is implied by the \"combo\" role and \"suggestions\" announcement."
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function, row 1 column 1\"",
                  "result": "pass"
                }
              ],
              "notes": "The datalist role is implied by the \"has auto complete\" announcement for the text input, combined with down arrow navigating suggestions. However, table semantics were also announced when none exist."
            },
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank\"",
                  "result": "partial"
                }
              ],
              "notes": "The datalist role is implied by the \"has auto complete\" announcement for the text input, combined with down arrow navigating suggestions. However, all options are announced as \"blank\"."
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"menu, function, function\"",
                  "result": "partial",
                  "notes": "data list is conveyed as a menu instead of a listbox"
                }
              ]
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"autofill, menu\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "touch_type",
                  "output": "\"function, prediction\"",
                  "result": "fail"
                }
              ],
              "notes": "Suggestions are listed in the normal virtual keyboard predictions. However, there is no indication that these predictions are suggestions from the website, and may be confused with the normal virtual keyboard predictions."
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "not possible to navigate to datalist and suggestions are not announced",
                  "result": "fail"
                }
              ]
            }
          }
        }
      }
    },
    {
      "feature_id": "html/datalist_element",
      "feature_assertion_id": "convey_boundaries",
      "results": {
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "When the end of the list is reached, down arrow loops back to the start, but no announcement was provided for start or end of list.",
                  "result": "partial"
                }
              ]
            },
            "ie": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
                  "result": "fail"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "start of target",
                  "output": "\"function, 1 of 6, selected\"",
                  "result": "pass"
                },
                {
                  "command": "next_option",
                  "from": "within target",
                  "to": "end of target",
                  "output": "\"async generator function, 6 of 6, selected\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"row 1\" was announced when first entering the datalist, however that is not expected and there is no indication when the end of the list is reached.\"",
                  "result": "fail"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "all suggestions are announced as \"blank\", with no indication of boundaries.",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"menu, function, function\"",
                  "result": "pass"
                },
                {
                  "command": "next_option",
                  "from": "within target",
                  "to": "end of target",
                  "output": "focus is sent back to the input and the input is announced",
                  "result": "pass"
                }
              ],
              "notes": "boundaries are implied by the menu and focus being sent back to the input"
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "indicates end of list but not start when going back up",
                  "result": "partial"
                }
              ]
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "next_item",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Function, prediction\"",
                  "result": "pass"
                },
                {
                  "command": "touch_type",
                  "output": "\"Function, prediction\"",
                  "result": "pass"
                }
              ],
              "notes": "Boundaries can be implied by the role of \"prediction\" being announced for each available prediction. In other words, when the user hears a different role announced, they can assume they left the predictions."
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "not possible to navigate to datalist and suggestions are not announced",
                  "result": "fail"
                }
              ]
            }
          }
        }
      }
    },
    {
      "feature_id": "html/datalist_element",
      "feature_assertion_id": "convey_change_in_suggestions",
      "results": {
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "The entered character was announced, but no information about changes to the suggestions",
                  "result": "fail"
                }
              ]
            },
            "ie": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "The entered character was announced, but no information about changes to the suggestions",
                  "result": "fail"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "The entered character was announced, but no information about changes to the suggestions",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "\"suggestions\" is announced every time the suggestions change",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "The entered character was announced, but no information about changes to the suggestions",
                  "result": "fail"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "The entered character was announced, but no information about changes to the suggestions",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "enter_text",
                  "from": "before target",
                  "to": "target",
                  "output": "no announcements",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "nothing output when options update from input tex",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "The entered character was announced, but no information about changes to the suggestions",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "enter_text",
                  "output": "no announcement made",
                  "result": "fail"
                }
              ]
            }
          }
        }
      }
    },
    {
      "feature_id": "html/option_element",
      "feature_assertion_id": "convey_name",
      "results": {
        "dragon_win": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "choose_dropdown_option",
                  "output": "text of command was entered into the text input",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "Name and value are announced when provided.",
                  "result": "pass"
                }
              ]
            },
            "ie": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
                  "result": "fail"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function, 1 of 6, selected\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "Name and value are announced when provided.",
                  "result": "pass"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"blank\" was announced for every option",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"generator function, generator function\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "function* generator function, double tap to activate, double tap and hold to long press",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "va_and": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "activate_name",
                  "output": "option was flagged for disambiguation",
                  "result": "pass",
                  "notes": "said \"tap function\""
                }
              ]
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "touch_type",
                  "output": "\"function*\"",
                  "result": "fail"
                }
              ],
              "notes": "Only the option value is listed as predictions, not the name."
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "nothing was conveyed at all",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "vc_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "activate_name",
                  "output": "names were not listed for options",
                  "result": "fail",
                  "notes": "said \"show names\". This was done after entering the word \"function\" into the input so that suggestions were displayed. "
                }
              ]
            }
          }
        },
        "vc_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "activate_name",
                  "output": "option was not activated",
                  "result": "pass",
                  "notes": "said \"click function\""
                }
              ]
            }
          }
        }
      }
    },
    {
      "feature_id": "html/option_element",
      "feature_assertion_id": "convey_role",
      "results": {
        "dragon_win": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "activate_role",
                  "output": "text of command was entered into the text input",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "Menu context is conveyed when entering the list, which implies that every item in the list is an option.",
                  "result": "partial"
                }
              ],
              "notes": "The menu context might imply a menuitem role instead of an option role"
            },
            "ie": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
                  "result": "fail"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "the option role is implied by the \"combo\" role of the text input and the \"suggestions\" announcement.",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"has auto complete\" announced on the text input implies that up and down arrows will navigate suggestions",
                  "result": "pass"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"has auto complete\" announced on the text input implies that up and down arrows will navigate suggestions",
                  "result": "partial"
                }
              ]
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"generator function, generator function\"",
                  "result": "partial",
                  "notes": "the menu role might imply a menuitem role instead of an option role"
                }
              ]
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function, in list, showing autofill popup\"",
                  "result": "pass"
                }
              ],
              "notes": "option role was implied by the announcement of \"autofill menu\" and \"in list\" when entering the list of options"
            }
          }
        },
        "va_and": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "show_numbers",
                  "output": "options were flagged with a number",
                  "result": "pass",
                  "notes": "said \"show numbers\""
                }
              ]
            }
          }
        },
        "vc_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "show_numbers",
                  "output": "role was not flagged with a number",
                  "result": "fail",
                  "notes": "said \"show numbers\""
                }
              ]
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "touch_type",
                  "output": "\"function, prediction\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "nothing was conveyed at all",
                  "result": "fail"
                }
              ]
            }
          }
        }
      }
    },
    {
      "feature_id": "html/option_element",
      "feature_assertion_id": "convey_value",
      "results": {
        "dragon_win": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "choose_dropdown_option",
                  "output": "text of command was entered into the text input",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "Name and value are announced when available",
                  "result": "pass"
                }
              ]
            },
            "ie": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
                  "result": "fail"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"async generator function\"",
                  "result": "fail"
                }
              ],
              "notes": "Only the name is displayed by Edge and announced by Narrator if both the name and value are set."
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "Name and value are announced when provided.",
                  "result": "pass"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"Blank\"",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"generator function, generator function\"",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "function* generator function, double tap to activate, double tap and hold to long press",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "va_and": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "activate_name",
                  "output": "options were flagged for disambiguation",
                  "result": "pass",
                  "notes": "said \"tap target arrow\""
                }
              ]
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "touch_type",
                  "output": "\"function*\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "nothing was conveyed at all",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "vc_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "activate_name",
                  "output": "names were not listed for options",
                  "result": "fail",
                  "notes": "said \"show names\". This was done after entering the word \"function\" into the input so that suggestions were displayed. "
                }
              ]
            }
          }
        },
        "vc_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "activate_name",
                  "output": "option was not activated",
                  "result": "fail",
                  "notes": "said \"click function\""
                }
              ]
            }
          }
        }
      }
    },
    {
      "feature_id": "html/option_element",
      "feature_assertion_id": "convey_posinset",
      "results": {
        "jaws": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "position information was not conveyed",
                  "result": "fail"
                }
              ]
            },
            "ie": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "position information was not conveyed",
                  "result": "fail"
                }
              ]
            },
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "position information was not conveyed",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "narrator": {
          "browsers": {
            "edge": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"function, 1 of 6, selected\"",
                  "result": "pass"
                }
              ]
            }
          }
        },
        "nvda": {
          "browsers": {
            "chrome": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "position information was not conveyed",
                  "result": "fail"
                }
              ],
              "notes": "the first item was announced as \"row 1\", however other items did not convey their position."
            },
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "position information was not conveyed",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "orca": {
          "browsers": {
            "firefox": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "\"generator function, generator function\"",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "talkback": {
          "browsers": {
            "and_chr": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "(outputs number of items when first entering list of options)",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "vo_ios": {
          "browsers": {
            "ios_saf": {
              "output": [
                {
                  "command": "touch_type",
                  "output": "position information was not conveyed",
                  "result": "fail"
                }
              ]
            }
          }
        },
        "vo_macos": {
          "browsers": {
            "safari": {
              "output": [
                {
                  "command": "next_option",
                  "from": "before target",
                  "to": "target",
                  "output": "position information was not conveyed",
                  "result": "fail"
                }
              ]
            }
          }
        }
      }
    }
  ],
  "history": [
    {
      "date": "2019-07-26",
      "message": "Talkback results added. Thank you @dennisl"
    },
    {
      "date": "2019-07-24",
      "message": "Add assertion for position in set information for the option element"
    },
    {
      "date": "2019-07-20",
      "message": "Test created"
    },
    {
      "date": "2019-09-15",
      "message": "Add orca results"
    },
    {
      "date": "2019-09-23",
      "message": "Added vc_ios results"
    },
    {
      "date": "2019-10-02",
      "message": "Add va_and results"
    },
    {
      "date": "2019-10-07",
      "message": "Add vc_macos results"
    }
  ],
  "versions": {
    "dragon_win": {
      "browsers": {
        "chrome": {
          "at_version": "15.30",
          "browser_version": "75",
          "os_version": "1903",
          "date": "2019-07-24"
        }
      }
    },
    "jaws": {
      "browsers": {
        "chrome": {
          "at_version": "2019.1906.10",
          "browser_version": "75",
          "os_version": "1903",
          "date": "2019-07-24"
        },
        "ie": {
          "at_version": "2019.1906.10",
          "browser_version": "11",
          "os_version": "1903",
          "date": "2019-07-24"
        },
        "firefox": {
          "at_version": "2019.1906.10",
          "browser_version": "68",
          "os_version": "1903",
          "date": "2019-07-24"
        }
      }
    },
    "narrator": {
      "browsers": {
        "edge": {
          "at_version": "1903",
          "browser_version": "44",
          "os_version": "1903",
          "date": "2019-07-24"
        }
      }
    },
    "nvda": {
      "browsers": {
        "chrome": {
          "at_version": "2019.1.1",
          "browser_version": "75",
          "os_version": "1903",
          "date": "2019-07-24"
        },
        "firefox": {
          "at_version": "2019.1.1",
          "browser_version": "68",
          "os_version": "1903",
          "date": "2019-07-24"
        }
      }
    },
    "orca": {
      "browsers": {
        "firefox": {
          "at_version": "3.31.4",
          "browser_version": "69",
          "os_version": "Ubuntu 19.04",
          "date": "2019-09-15"
        }
      }
    },
    "talkback": {
      "browsers": {
        "and_chr": {
          "at_version": "7",
          "browser_version": "75",
          "os_version": "7",
          "date": "2019-07-26"
        }
      }
    },
    "va_and": {
      "browsers": {
        "and_chr": {
          "at_version": "3.1",
          "browser_version": "77",
          "os_version": "7",
          "date": "2019-10-02"
        }
      }
    },
    "vo_ios": {
      "browsers": {
        "ios_saf": {
          "at_version": "12.3.1",
          "browser_version": "12.3.1",
          "os_version": "12.3.1",
          "date": "2019-07-24"
        }
      }
    },
    "vo_macos": {
      "browsers": {
        "safari": {
          "at_version": "10.14.5",
          "browser_version": "12.1.1",
          "os_version": "10.14.5",
          "date": "2019-07-24"
        }
      }
    },
    "vc_ios": {
      "browsers": {
        "ios_saf": {
          "at_version": "13.0",
          "browser_version": "13.0",
          "os_version": "13.0",
          "date": "2019-09-23"
        }
      }
    },
    "vc_macos": {
      "browsers": {
        "safari": {
          "at_version": "10.15",
          "browser_version": "13.0.2",
          "os_version": "10.15",
          "date": "2019-10-07"
        }
      }
    }
  }
}
