{
  "title": "HTML input with datalist test",
  "description": "A sample datalist attached to a text input. Provide feedback on this test and results in [issue #73](https://github.com/accessibilitysupported/a11ysupport.io/issues/73)",
  "html_file": "html/datalist.html",
  "assertions": [
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "convey_name"
    },
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "convey_role",
      "browserNotes": {
        "jaws": {
          "chrome": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo\" or \"has popup\") to convey the presence of the datalist.",
          "ie": "When paired with IE, JAWS does not alter the role to convey the datalist functionality.",
          "firefox": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo\" or \"has popup\") to convey the presence of the datalist."
        },
        "nvda": {
          "chrome": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo box\" or \"has popup\") to convey the presence of the datalist.",
          "firefox": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo box\" or \"subMenu\") to convey the presence of the datalist."
        }
      }
    },
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "convey_change_in_value",
      "browserNotes": {
        "jaws": {
          "chrome": "Focus was sent back to the input and the input was announced",
          "ie": "unknown because it was not possible to navigate to a suggestion to activate",
          "firefox": "Unknown because it was not possible to navigate to a suggestion to activate"
        },
        "narrator": {
          "edge": "The value was announced after a suggestion was activated and focus was returned to the text input"
        },
        "nvda": {
          "chrome": "Focus was returned to the text input",
          "firefox": "Focus was returned to the text input but only the value was announced"
        },
        "talkback": {
          "and_chr": "value was announced and focus was returned to the text input."
        },
        "vo_ios": {
          "ios_saf": "The activated suggestion was announced, and focus was moved to a new suggestion"
        },
        "vo_macos": {
          "safari": "Focus was returned to the text input"
        }
      }
    },
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "convey_value"
    },
    {
      "feature_id": "html/input(type-text)_element",
      "feature_assertion_id": "provide_shortcuts"
    },
    {
      "feature_id": "html/list_attribute",
      "feature_assertion_id": "convey_presence",
      "browserNotes": {
        "jaws": {
          "chrome": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo\" or \"has popup\") to convey the presence of the datalist.",
          "ie": "When paired with IE, JAWS does not alter the role to convey the datalist functionality.",
          "firefox": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo\" or \"has popup\") to convey the presence of the datalist."
        },
        "nvda": {
          "chrome": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo box\" or \"subMenu\") to convey the presence of the datalist.",
          "firefox": "The role is not consistently conveyed across browsers, and is often presented with a modifier (\"combo box\" or \"subMenu\") to convey the presence of the datalist."
        }
      }
    },
    {
      "feature_id": "html/datalist_element",
      "feature_assertion_id": "convey_role",
      "browserNotes": {
        "jaws": {
          "chrome": "The datalist is conveyed as a menu as opposed to a listbox."
        },
        "narrator": {
          "edge": "The datalist role is implied by the \"combo\" role and \"suggestions\" announcement."
        },
        "nvda": {
          "chrome": "The datalist role is implied by the \"has auto complete\" announcement for the text input, combined with down arrow navigating suggestions. However, table semantics were also announced when none exist.",
          "firefox": "The datalist role is implied by the \"has auto complete\" announcement for the text input, combined with down arrow navigating suggestions. However, all options are announced as \"blank\"."
        },
        "vo_ios": {
          "ios_saf": "Suggestions are listed in the normal virtual keyboard predictions. However, there is no indication that these predictions are suggestions from the website, and may be confused with the normal virtual keyboard predictions."
        }
      }
    },
    {
      "feature_id": "html/datalist_element",
      "feature_assertion_id": "convey_boundaries",
      "browserNotes": {
        "vo_ios": {
          "ios_saf": "Boundaries can be implied by the role of \"prediction\" being announced for each available prediction. In other words, when the user hears a different role announced, they can assume they left the predictions."
        },
        "orca": {
          "firefox": "boundaries are implied by the menu and focus being sent back to the input"
        }
      }
    },
    {
      "feature_id": "html/datalist_element",
      "feature_assertion_id": "convey_change_in_suggestions"
    },
    {
      "feature_id": "html/option_element",
      "feature_assertion_id": "convey_name",
      "browserNotes": {
        "vo_ios": {
          "ios_saf": "Only the option value is listed as predictions, not the name."
        }
      }
    },
    {
      "feature_id": "html/option_element",
      "feature_assertion_id": "convey_role",
      "browserNotes": {
        "jaws": {
          "chrome": "The menu context might imply a menuitem role instead of an option role"
        },
        "talkback": {
          "and_chr": "option role was implied by the announcement of \"autofill menu\" and \"in list\" when entering the list of options"
        }
      }
    },
    {
      "feature_id": "html/option_element",
      "feature_assertion_id": "convey_value",
      "browserNotes": {
        "narrator": {
          "edge": "Only the name is displayed by Edge and announced by Narrator if both the name and value are set."
        }
      }
    },
    {
      "feature_id": "html/option_element",
      "feature_assertion_id": "convey_posinset",
      "browserNotes": {
        "nvda": {
          "chrome": "the first item was announced as \"row 1\", however other items did not convey their position."
        }
      }
    }
  ],
  "commands": {
    "dragon_win": {
      "chrome": [
        {
          "command": "activate_name",
          "output": "text input was focused",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            }
          ]
        },
        {
          "command": "activate_role",
          "output": "text input was focused",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "show_dropdown_choices",
          "output": "suggestions were displayed",
          "css_target": "datalist",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "choose_dropdown_option",
          "output": "text of command was entered into the text input",
          "css_target": "option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            }
          ]
        },
        {
          "command": "activate_role",
          "output": "text of command was entered into the text input",
          "css_target": "option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            }
          ]
        },
        {
          "command": "choose_dropdown_option",
          "output": "text of command was entered into the text input",
          "css_target": "datalist option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "jaws": {
      "chrome": [
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Edit combo\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "fail",
              "notes": "did not announce the name when entering the input and automatically switching to forms mode."
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, edit combo, to set the value use the arrow keys or type the value.\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "(the entered character was announced)",
          "css_target": "input[type=\"text\"]",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "output": "\"Function, type Edit combo\"",
          "css_target": "input[type=\"text\"]",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "output": "Shown in list of form controls with name and \"edit combo\" role",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Edit combo, to set the value use the arrow keys or type the value.\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Edit combo\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Edit combo, to set the value use the arrow keys or type the value.\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"Menu, Function, To move through items press up or down arrow\"",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "partial"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "partial"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "css_target": "datalist",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "Name and value are announced when provided.",
          "css_target": "option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "partial"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "Name and value are announced when available",
          "css_target": "datalist option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        }
      ],
      "ie": [
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"edit, function type, edit, type in text\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, Edit, type in text\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "(the entered character was announced)",
          "css_target": "input[type=\"text\"]",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "output": "\"edit, function\"",
          "css_target": "input[type=\"text\"]",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "unknown"
            }
          ]
        },
        {
          "command": "open_element_list",
          "output": "Shown in list of form controls with name and \"edit\" role",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Edit, type in text\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"edit\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Edit, type in text\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "fail"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "css_target": "datalist",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
          "css_target": "option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
          "css_target": "datalist option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ],
      "firefox": [
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Blank, function type, Edit, has popup\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "announced the name when entering the input and automatically switching to forms mode."
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, Edit has popup, type in text\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "(the entered character was announced)",
          "css_target": "input[type=\"text\"]",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "output": "\"Function, edit, has popup\"",
          "css_target": "input[type=\"text\"]",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "unknown"
            }
          ]
        },
        {
          "command": "open_element_list",
          "output": "Shown in list of elements with name and \"edit\" role",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Edit has popup, type in text\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Blank, Edit, has popup\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Edit has popup, type in text\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "fail"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "css_target": "datalist",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
          "css_target": "option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"Blank\", skipped the suggestions and started reading the content after the input.",
          "css_target": "datalist option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "narrator": {
      "edge": [
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, Combo edit, scan off.\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, Combo edit, scan off, suggestions available.\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "(the entered character was announced)",
          "css_target": "input[type=\"text\"]",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "output": "\"Function\"",
          "css_target": "input[type=\"text\"]",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Combo edit, press space to edit\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Combo edit, scan off.\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Combo edit, scan off, suggestions available.\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"function, 1 of 6, selected\"",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "start of target",
          "output": "\"function, 1 of 6, selected\"",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "within target",
          "to": "end of target",
          "output": "\"async generator function, 6 of 6, selected\"",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "\"suggestions\" is announced every time the suggestions change",
          "css_target": "datalist",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"function, 1 of 6, selected\"",
          "css_target": "option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"async generator function\"",
          "css_target": "datalist option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "nvda": {
      "chrome": [
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, Combo box, has auto complete, editable.\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, Combo box, has auto complete, editable. Blank.\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "(the entered character was announced)",
          "css_target": "input[type=\"text\"]",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "output": "\"Function type combo box, has auto complete, editable, function\"",
          "css_target": "input[type=\"text\"]",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "output": "Shown in list of form controls with name and \"combobox; edit has auto complete editable\"",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Combo box, has auto complete, editable.\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Combo box, has auto complete, editable.\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Combo box, has auto complete, editable. Blank.\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"function, row 1 column 1\"",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "fail"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "css_target": "datalist",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "Name and value are announced when provided.",
          "css_target": "option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "Name and value are announced when provided.",
          "css_target": "datalist option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        }
      ],
      "firefox": [
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, Edit subMenu, has auto complete. Blank.\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, Edit has auto complete. Blank.\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "(the entered character was announced)",
          "css_target": "input[type=\"text\"]",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "output": "\"function\"",
          "css_target": "input[type=\"text\"]",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "output": "\"Function type Edit; subMenu has auto complete.\"",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Edit subMenu, has auto complete. Blank.\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Edit subMenu, has auto complete. Blank.\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type Edit has auto complete. Blank.\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"Blank\"",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "partial"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "all suggestions are announced as \"blank\", with no indication of boundaries.",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "fail"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "css_target": "datalist",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"blank\" was announced for every option",
          "css_target": "option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "partial"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"Blank\"",
          "css_target": "datalist option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "talkback": {
      "and_chr": [
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"edit box, function type, double-tap to enter text\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "(the entered character was announced)",
          "css_target": "input[type=\"text\"]",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "output": "\"function, close features\"",
          "css_target": "input[type=\"text\"]",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "output": "\"edit box, function type, double-tap to enter text\"",
          "css_target": "input[type=\"text\"]",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "(after entering text) \"showing autofill popup\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"autofill, menu\"",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "partial"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "nothing output when options update from input tex",
          "css_target": "datalist",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "function* generator function, double tap to activate, double tap and hold to long press",
          "css_target": "option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "function* generator function, double tap to activate, double tap and hold to long press",
          "css_target": "datalist option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "va_and": {
      "and_chr": [
        {
          "command": "activate_name",
          "output": "input was not focused",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "fail",
              "notes": "said \"tap function type\""
            }
          ]
        },
        {
          "command": "show_numbers",
          "output": "role was flagged with a number",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "said \"show numbers\""
            }
          ]
        },
        {
          "command": "activate_name",
          "output": "option was flagged for disambiguation",
          "css_target": "option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "said \"tap function\""
            }
          ]
        },
        {
          "command": "show_numbers",
          "output": "options were flagged with a number",
          "css_target": "option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "said \"show numbers\""
            }
          ]
        },
        {
          "command": "activate_name",
          "output": "options were flagged for disambiguation",
          "css_target": "datalist option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass",
              "notes": "said \"tap target arrow\""
            }
          ]
        }
      ]
    },
    "vo_ios": {
      "ios_saf": [
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, text field, double tap to edit.\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "(the entered character was announced)",
          "css_target": "input[type=\"text\"]",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "output": "\"Function\"",
          "css_target": "input[type=\"text\"]",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item_of_type",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, text field, double tap to edit.\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, text field, double tap to edit.\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "fail"
            }
          ]
        },
        {
          "command": "touch_type",
          "output": "\"function, prediction\"",
          "css_target": "datalist",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function, prediction\"",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "The entered character was announced, but no information about changes to the suggestions",
          "css_target": "datalist",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "touch_type",
          "output": "\"function*\"",
          "css_target": "option",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            }
          ]
        },
        {
          "command": "touch_type",
          "output": "\"function*\"",
          "css_target": "datalist option",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        }
      ]
    },
    "vo_macos": {
      "safari": [
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, edit text\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, edit text\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "(the entered character was announced)",
          "css_target": "input[type=\"text\"]",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "output": "\"Function\"",
          "css_target": "input[type=\"text\"]",
          "from": "before target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "open_element_list",
          "output": "Shown in list of form controls with name and \"edit text\" role",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_form_field",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, edit text\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, edit text\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"Function type, edit text\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "not possible to navigate to datalist and suggestions are not announced",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "fail"
            }
          ]
        },
        {
          "command": "enter_text",
          "output": "no announcement made",
          "css_target": "datalist",
          "from": "target",
          "to": "target",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "nothing was conveyed at all",
          "css_target": "option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "fail"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "nothing was conveyed at all",
          "css_target": "datalist option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "orca": {
      "firefox": [
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"function type, entry\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "\"function type, entry, focus mode\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass"
            },
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "from": "before target",
          "to": "target",
          "output": "the character is announced",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "select_option",
          "from": "before target",
          "to": "target",
          "output": "\"function\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_change_in_value",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_edit_field",
          "from": "before target",
          "to": "target",
          "output": "\"function type, entry\"",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "list_edit_fields",
          "from": "before target",
          "to": "target",
          "output": "in list of text fields",
          "css_target": "input[type=\"text\"]",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "provide_shortcuts",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_item",
          "from": "before target",
          "to": "target",
          "output": "\"function type, entry\"",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_focusable_item",
          "from": "before target",
          "to": "target",
          "output": "function type, entry, focus mode",
          "css_target": "input[list]",
          "results": [
            {
              "feature_id": "html/list_attribute",
              "feature_assertion_id": "convey_presence",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"menu, function, function\"",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_role",
              "result": "partial",
              "notes": "data list is conveyed as a menu instead of a listbox"
            },
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "within target",
          "to": "end of target",
          "output": "focus is sent back to the input and the input is announced",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_boundaries",
              "result": "pass"
            }
          ]
        },
        {
          "command": "enter_text",
          "from": "before target",
          "to": "target",
          "output": "no announcements",
          "css_target": "datalist",
          "results": [
            {
              "feature_id": "html/datalist_element",
              "feature_assertion_id": "convey_change_in_suggestions",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"generator function, generator function\"",
          "css_target": "option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "partial",
              "notes": "the menu role might imply a menuitem role instead of an option role"
            },
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_posinset",
              "result": "fail"
            }
          ]
        },
        {
          "command": "next_option",
          "from": "before target",
          "to": "target",
          "output": "\"generator function, generator function\"",
          "css_target": "datalist option",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail"
            }
          ]
        }
      ]
    },
    "vc_ios": {
      "ios_saf": [
        {
          "command": "activate_name",
          "output": "input was focused",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "said \"tap function type\""
            }
          ]
        },
        {
          "command": "activate_name",
          "output": "names were not listed for options",
          "css_target": "option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail",
              "notes": "said \"show names\". This was done after entering the word \"function\" into the input so that suggestions were displayed. "
            }
          ]
        },
        {
          "command": "activate_name",
          "output": "names were not listed for options",
          "css_target": "datalist option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail",
              "notes": "said \"show names\". This was done after entering the word \"function\" into the input so that suggestions were displayed. "
            }
          ]
        }
      ]
    },
    "vc_macos": {
      "safari": [
        {
          "command": "activate_name",
          "output": "input was focused",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "said \"click function type\""
            }
          ]
        },
        {
          "command": "show_numbers",
          "output": "role was flagged with a number",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "said \"show numbers\""
            }
          ]
        },
        {
          "command": "activate_name",
          "output": "option was not activated",
          "css_target": "option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "said \"click function\""
            }
          ]
        },
        {
          "command": "show_numbers",
          "output": "role was not flagged with a number",
          "css_target": "option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "fail",
              "notes": "said \"show numbers\""
            }
          ]
        },
        {
          "command": "activate_name",
          "output": "option was not activated",
          "css_target": "datalist option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail",
              "notes": "said \"click function\""
            }
          ]
        }
      ]
    },
    "wsr": {
      "chrome": [
        {
          "command": "activate_name",
          "output": "role was activated",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "said \"click function type\""
            }
          ]
        },
        {
          "command": "show_numbers",
          "output": "role was flagged with a number",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "said \"show numbers\""
            }
          ]
        },
        {
          "command": "activate_name",
          "output": "role was not activated",
          "css_target": "option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "fail",
              "notes": "said \"click function\""
            }
          ]
        },
        {
          "command": "show_numbers",
          "output": "role was not flagged with a number",
          "css_target": "option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "fail",
              "notes": "said \"show numbers\""
            }
          ]
        },
        {
          "command": "activate_name",
          "output": "role was not activated",
          "css_target": "datalist option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "fail",
              "notes": "said \"click function\""
            }
          ]
        }
      ],
      "edge": [
        {
          "command": "activate_name",
          "output": "role was activated",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "said \"click function type\""
            }
          ]
        },
        {
          "command": "show_numbers",
          "output": "role was flagged with a number",
          "css_target": "input[type=\"text\"]",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/input(type-text)_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "said \"show numbers\""
            }
          ]
        },
        {
          "command": "activate_name",
          "output": "role was activated",
          "css_target": "option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_name",
              "result": "pass",
              "notes": "said \"click function\""
            }
          ]
        },
        {
          "command": "show_numbers",
          "output": "role was flagged with a number",
          "css_target": "option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_role",
              "result": "pass",
              "notes": "said \"show numbers\""
            }
          ]
        },
        {
          "command": "activate_name",
          "output": "",
          "css_target": "datalist option",
          "from": "na",
          "to": "na",
          "results": [
            {
              "feature_id": "html/option_element",
              "feature_assertion_id": "convey_value",
              "result": "na",
              "notes": "not displayed"
            }
          ]
        }
      ]
    }
  },
  "history": [
    {
      "date": "2019-07-26",
      "message": "Talkback results added. Thank you @dennisl"
    },
    {
      "date": "2019-07-24",
      "message": "Add assertion for position in set information for the option element"
    },
    {
      "date": "2019-07-20",
      "message": "Test created"
    },
    {
      "date": "2019-09-15",
      "message": "Add orca results"
    },
    {
      "date": "2019-09-23",
      "message": "Added vc_ios results"
    },
    {
      "date": "2019-10-02",
      "message": "Add va_and results"
    },
    {
      "date": "2019-10-07",
      "message": "Add vc_macos results"
    },
    {
      "date": "2019-10-18",
      "message": "Add wsr results"
    }
  ],
  "versions": {
    "dragon_win": {
      "browsers": {
        "chrome": {
          "at_version": "15.30",
          "browser_version": "75",
          "os_version": "1903",
          "date": "2019-07-24"
        }
      }
    },
    "jaws": {
      "browsers": {
        "chrome": {
          "at_version": "2019.1906.10",
          "browser_version": "75",
          "os_version": "1903",
          "date": "2019-07-24"
        },
        "ie": {
          "at_version": "2019.1906.10",
          "browser_version": "11",
          "os_version": "1903",
          "date": "2019-07-24"
        },
        "firefox": {
          "at_version": "2019.1906.10",
          "browser_version": "68",
          "os_version": "1903",
          "date": "2019-07-24"
        }
      }
    },
    "narrator": {
      "browsers": {
        "edge": {
          "at_version": "1903",
          "browser_version": "44",
          "os_version": "1903",
          "date": "2019-07-24"
        }
      }
    },
    "nvda": {
      "browsers": {
        "chrome": {
          "at_version": "2019.1.1",
          "browser_version": "75",
          "os_version": "1903",
          "date": "2019-07-24"
        },
        "firefox": {
          "at_version": "2019.1.1",
          "browser_version": "68",
          "os_version": "1903",
          "date": "2019-07-24"
        }
      }
    },
    "orca": {
      "browsers": {
        "firefox": {
          "at_version": "3.31.4",
          "browser_version": "69",
          "os_version": "Ubuntu 19.04",
          "date": "2019-09-15"
        }
      }
    },
    "talkback": {
      "browsers": {
        "and_chr": {
          "at_version": "7",
          "browser_version": "75",
          "os_version": "7",
          "date": "2019-07-26"
        }
      }
    },
    "va_and": {
      "browsers": {
        "and_chr": {
          "at_version": "3.1",
          "browser_version": "77",
          "os_version": "7",
          "date": "2019-10-02"
        }
      }
    },
    "vo_ios": {
      "browsers": {
        "ios_saf": {
          "at_version": "12.3.1",
          "browser_version": "12.3.1",
          "os_version": "12.3.1",
          "date": "2019-07-24"
        }
      }
    },
    "vo_macos": {
      "browsers": {
        "safari": {
          "at_version": "10.14.5",
          "browser_version": "12.1.1",
          "os_version": "10.14.5",
          "date": "2019-07-24"
        }
      }
    },
    "vc_ios": {
      "browsers": {
        "ios_saf": {
          "at_version": "13.0",
          "browser_version": "13.0",
          "os_version": "13.0",
          "date": "2019-09-23"
        }
      }
    },
    "vc_macos": {
      "browsers": {
        "safari": {
          "at_version": "10.15",
          "browser_version": "13.0.2",
          "os_version": "10.15",
          "date": "2019-10-07"
        }
      }
    },
    "wsr": {
      "browsers": {
        "edge": {
          "at_version": "1903",
          "browser_version": "44",
          "os_version": "1903",
          "date": "2019-10-18"
        },
        "chrome": {
          "at_version": "1903",
          "browser_version": "77",
          "os_version": "1903",
          "date": "2019-10-18"
        }
      }
    }
  }
}