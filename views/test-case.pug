extends layout
include test-case/assertion

block content
    div.content-wrapper
        div.content
            h1= 'Test: ' + test.title
            div(class="current-support-container "+test.core_support_string.replace(" ", "-"))
                p= 'Current support: ' + test.core_support_string

            p!= md.renderInline(test.description)

            a(href="/tests/" + testIdHelper.makeSafe(test.id) + "/run") Run this test and and submit your results

            h2 On this page
            ul
                li
                    a(href="#test-html") Test HTML
                li
                    a(href="#support-tables") Support tables
                    if test.assertions
                        ul
                            li
                                a(href="#support-tables") Support summary by assertion type
                            each assertion in test.assertions
                                li
                                    a(href="#assertion-"+assertion.feature_id.replace('/', '-') + "-" + assertion.feature_assertion_id) #{assertion.feature_title}: #{assertion.assertion_title}
                li
                    a(href="#history") History

            h2(id="test-html") Test HTML
            if (test.html_file.startsWith('http'))
                a(href=test.html_file) view the external text
            else if (testHTML && testHTML.split(/\r\n|\r|\n/).length < 30)
                a(href="/tests/html/" + test.html_file target="_blank") open the test page in a new tab
                pre.test-html
                    code= testHTML
            else
                a(href="/tests/html/" + test.html_file target="_blank") open the test page in a new tab
                p HTML source is too long to display here.


            h2(id="support-tables") Support tables

            h3(id="assertion-summary-table") Assertion support summary by type
                table.support-table
                    thead
                        tr
                            th MUST
                            th SHOULD
                            th MAY
                    tbody
                        tr
                            td(class="current-support-container " + test.core_must_support_string.replace(" ", "-")) #{test.core_must_support_string}
                            td(class="current-support-container " + test.core_should_support_string.replace(" ", "-")) #{test.core_should_support_string}
                            td(class="current-support-container " + test.core_may_support_string.replace(" ", "-")) #{test.core_may_support_string}

            each assertion in test.assertions
                div.assertion-container
                    h3(id="assertion-"+assertion.feature_id.replace('/', '-') + "-" + assertion.feature_assertion_id) #{assertion.feature_title}: #{assertion.assertion_title}
                    p This assertion is from the #[a(href="/tech/"+assertion.feature_id) #{assertion.feature_title} feature].

                    table(aria-labelledby="core-support")
                        tr
                            th AT
                            th Browser
                            th Support
                            th Output
                            th Action
                        each at in ATBrowsers.core_at
                            each browser in ATBrowsers.at[at].core_browsers
                                tr
                                    td= ATBrowsers.at[at].title
                                        if assertion.results[at].browsers[browser].at_version
                                            span= ' ' + assertion.results[at].browsers[browser].at_version
                                    td= ATBrowsers.browsers[browser].title
                                        if assertion.results[at].browsers[browser].browser_version
                                            span= ' ' + assertion.results[at].browsers[browser].browser_version
                                    td(class='support-case ' + assertion.results[at].browsers[browser].support)= assertion.results[at].browsers[browser].support_string
                                    td
                                        if (assertion.results[at].browsers[browser].output)
                                            ul
                                                each output in assertion.results[at].browsers[browser].output
                                                    li
                                                        if (ATBrowsers.at[at].commands[output.command])
                                                            strong= "(" + output.result + ") command: " + ATBrowsers.at[at].commands[output.command].command + ": "
                                                        else
                                                            strong= "(" + output.result + ") " + output.command + ": "
                                                        span= output.output
                                        else
                                            span -
                                    td
                                        a(href="/tests/" + testIdHelper.makeSafe(test.id) + "/" + testIdHelper.makeSafe(assertion.feature_id) + "/" + assertion.feature_assertion_id + "/" + at + "/" + browser) More information

                    details.indent
                        summary
                            h4(id="extended-support") Extended Support for: #{assertion.feature_title}: #{assertion.assertion_title}

                        p These are less common combinations
                        table(aria-labelledby="extended-support")
                            tr
                                th AT
                                th Browser
                                th Support
                                th Output
                                th Action
                            each at in ATBrowsers.at
                                - var browsers = at.extended_browsers
                                if ATBrowsers.extended_at.includes(at.id)
                                    - var browsers = browsers.concat(at.core_browsers)
                                each browser in browsers
                                    tr
                                        td= at.title
                                            if assertion.results[at.id].browsers[browser].at_version
                                                span= ' ' + assertion.results[at.id].browsers[browser].at_version
                                        td= ATBrowsers.browsers[browser].title
                                            if assertion.results[at.id].browsers[browser].browser_version
                                                span= ' ' + assertion.results[at.id].browsers[browser].browser_version
                                        td(class='support-case ' + assertion.results[at.id].browsers[browser].support)= assertion.results[at.id].browsers[browser].support_string
                                        td
                                            if (assertion.results[at.id].browsers[browser].output)
                                                ul
                                                    each output in assertion.results[at.id].browsers[browser].output
                                                        li
                                                            if (ATBrowsers.at[at.id].commands[output.command])
                                                                strong= "(" + output.result + ") command: " + ATBrowsers.at[at.id].commands[output.command].command + ": "
                                                            else
                                                                strong= "(" + output.result + ") " + output.command + ": "
                                                            span= output.output
                                            else
                                                span -
                                        td
                                            a(href="/tests/" + testIdHelper.makeSafe(test.id) + "/" + testIdHelper.makeSafe(assertion.feature_id) + "/" + assertion.feature_assertion_id + "/" + at.id + "/" + browser) More information
            h2(id="history") History
            ul
                each record in test.history
                    li
                        strong= record.date + ' '
                        span!= md.renderInline(record.message)

        div.sidebar
            h2 Related Features
            p This test is found in the following features:
            ul
                each featureInfo in features
                    li
                        a(href="/tech/" + featureInfo.featureId) #{featureInfo.title}

            h2 Is something not right?
            p We use our #[a(href="https://github.com/accessibilitysupported/accessibilitysupported") GitHub repository] to manage our issue tracking. Please provide as much information as you can for issues, and please leave the id in the issue title intact.

            ul
                li
                    a(href='https://github.com/accessibilitysupported/accessibilitysupported/issues/new?title='+test.id+'&labels=test%20case') There is a problem with this test case (the test file, procedure, expected results, etc)
                li
                    p Use the support tables to view details and report issues or changes.

    script(src="/js/feature-test.js")
